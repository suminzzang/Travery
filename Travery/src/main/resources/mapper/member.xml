<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.travery.model.mapper.MemberMapper">

	<resultMap type="memberDto" id="member">
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
	</resultMap>
	
	<!-- ADMIN -->
	<resultMap type="memberDto" id="memberAll" extends="member">
		<result column="user_password" property="userPwd"/>
		<result column="email_id" property="emailId"/>
		<result column="email_domain" property="emailDomain"/>
		<result column="phone_number" property="phoneNumber"/>
		<result column="user_sido" property="userSido"/>
		<result column="user_gugun" property="userGugun"/>
		<result column="join_date" property="joinDate"/>
	</resultMap>
	
	<resultMap type="HotPlaceBoardDto" id="hotPlaceBoard">
		<result column="article_no" property="articleNo"/>
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="subject" property="subject"/>
		<result column="content" property="content"/>
		<result column="hit" property="hit"/>
		<result column="register_time" property="registerTime"/>
	</resultMap>
	
	<select id="loginMember" parameterType="map" resultMap="member">
		select user_id, user_name
		from members
		where user_id = #{userId} and user_password = #{userPwd}
	</select>

	<insert id="joinMember" parameterType="memberDto">
		insert into members (user_id, user_name, user_password, email_id, email_domain, phone_number, user_sido, user_gugun, join_date)
		values (#{userId}, #{userName}, #{userPwd}, #{emailId}, #{emailDomain}, #{phoneNumber}, #{userSido}, #{userGugun}, now())
	</insert>
	
	<select id="verifyMember" parameterType="map" resultType="int">
		select count(*)
		from members
		where user_id = #{userId} and user_password = #{userPwd}
	</select>
	
	<update id="updateInfo" parameterType="memberDto">
		update members
		set user_name = #{userName}, user_password = #{userPwd}, email_id = #{emailId}, email_domain = #{emailDomain}, phone_number = #{phoneNumber}, user_sido = #{userSido}, user_gugun = #{userGugun}
		where user_id = #{userId}
	</update>
	
	<delete id="removeMember" parameterType="map">
		delete from members
		where user_id = #{userId} and user_password = #{userPwd}
	</delete>

	<select id="idCheck" parameterType="String" resultType="int">
		select count(user_id)
		from members
		where user_id = #{userId}
	</select>

	<select id="emailCheck" parameterType="map" resultType="int">
		select count(*)
		from members
		where email_id = #{emailId} and email_domain = #{emailDomain}
	</select>
	
	<select id="findPwEmailCheck" parameterType="memberDto" resultType="int">
		select count(*)
		from members
		where email_id = #{emailId} and email_domain = #{emailDomain} and user_id = #{userId}
	</select>
	
	<update id="changePassword" parameterType="memberDto">
		update members
		set user_password = #{userPwd}
		where user_id = #{userId}
	</update>
	
	
	<select id="getInfo" parameterType="string" resultMap="memberAll">
		select user_id, user_name, email_id, email_domain, phone_number, user_sido, user_gugun, join_date
		from members
		where user_id = #{userId}
	</select>
	
	<select id="findId" parameterType="map" resultType="String">
		select user_id
		from members
		where email_id = #{emailId} and email_domain = #{emailDomain}
	</select>
	
	<select id="getmyHotPlace" parameterType="String" resultMap="hotPlaceBoard">
		select *
		from hotplaceboard 
		where user_id = #{userId}
		order by article_no desc
	</select>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from members
		where user_id = #{userId}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update members
		set token = #{token}
		where user_id = #{userId}
	</update>
		
	<update id="deleteRefreshToken" parameterType="map">
		update members
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
	
	<select id="getSalt" parameterType="string" resultType="string">
		select salt
		from members
		where user_id = #{userId}
	</select>
	
	<update id="setSalt" parameterType="map">
		update members
		set salt = #{salt}
		where user_id = #{userId}
	</update>
	
</mapper>